/* Reset default margin and padding */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

/* General styles */
body {
  font-family: Arial, sans-serif;
  text-align: center;
  background-color: black; /* Set background color of the entire page */
  color: white; /* Set default text color */
  margin: 0;
}

.black-background {
  background-color: black; /* Ensure background covers the entire viewport */
  min-height: 100vh; /* Ensure background covers entire viewport height */
  display: flex;
  justify-content: center;
  align-items: center;
}

.container {
  width: 80%; /* Adjust width percentage as per your design */
  max-width: 600px; /* Set maximum width for larger screens */
  background-color: white; /* Rectangular content area */
  padding: 40px; /* Increase padding for more space inside the container */
  border-radius: 10px; /* Rounded corners for the content area */
  box-shadow: 0 0 20px rgba(0, 0, 0, 0.2); /* Optional: Add a subtle shadow */
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}



.image-container {
  position: relative;
  width: 150px; /* Adjust width of image container */
  height: 150px; /* Adjust height of image container */
  border-radius: 50%; /* Create a circular shape */
  overflow: hidden; /* Hide overflow (extra parts of the image) */
  margin-top: auto; /* Push the image container to the bottom */
  border: 2px solid white; /* Add a white border around the image */
}

.rounded-image {
  display: block;
  width: 100%;
  height: 100%; /* Ensure the image fills the container */
  object-fit: cover; /* Maintain aspect ratio and cover the container */
  border-radius: 50%; /* Ensure the image itself is circular */
  transition: transform 0.3s ease; /* Smooth zooming animation */
}

/* Add a hover effect to zoom the image */
.image-container:hover .rounded-image {
  transform: scale(1.1); /* Scale the image by 110% on hover */
}

/* Create a pseudo-element for the border */
.image-container::before {
  content: ''; /* Required for pseudo-elements */
  position: absolute;
  top: -3px;
  left: -3px;
  width: calc(100% + 6px);
  height: calc(100% + 6px);
  border-radius: 50%; /* Ensure pseudo-element is circular */
  border: 2px solid transparent; /* Transparent border initially */
  box-sizing: border-box;
  animation: borderSparkle 1.5s ease infinite; /* Border sparkle animation */
}

@keyframes borderSparkle {
  0% {
      border-color: transparent;
      transform: rotate(0deg);
  }
  50% {
      border-color: #000000; /* Color of the sparkling border */
      transform: rotate(180deg);
  }
  100% {
      border-color: transparent;
      transform: rotate(360deg);
  }
}